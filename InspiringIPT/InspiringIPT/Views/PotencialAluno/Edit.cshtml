@model InspiringIPT.Models.PotencialAluno


@if (TempData["SubmitSucess"] != null)
{
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header modal-header-success">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@TempData["ad"]</h4>
                </div>
                <div class="modal-body">
                    <p>@TempData["SubmitSucess"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <br />
    <div class="col-sm-14" style="background-color:lavenderblush;">
        <h2 class="page-header">@ViewBag.Title <small> Editar os Dados <i class="glyphicon glyphicon-user"></i></small></h2>
    </div>
    <div class="col-sm-14" style="background-color:lavender">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>PotencialAluno</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AlunoID)
                @Html.HiddenFor(model => model.CodigoIdentificacao)


                <div class="form-group">
                    @Html.LabelFor(model => model.NomeCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomeCompleto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Concelho, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Concelho, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Concelho, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contacto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Contacto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Contacto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.RadioButtonFor(model => model.Genero, "M") Masculino <br />
                        @Html.RadioButtonFor(model => model.Genero, "F") Feminino
                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataInscricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataInscricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataInscricao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HabAcademicas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.RadioButtonFor(model => model.HabAcademicas, "12º ano") 12º ano <br />
                        @Html.RadioButtonFor(model => model.HabAcademicas, "Licenciatura") Licenciatura<br />
                        @Html.RadioButtonFor(model => model.HabAcademicas, "Mestrado") Mestrado<br />
                        @Html.RadioButtonFor(model => model.HabAcademicas, "Doutoramento") Doutoramento<br />
                        @Html.RadioButtonFor(model => model.HabAcademicas, "Grau Académico Superior Estrangeiro") Grau Académico Auperior Estrangeiro<br />
                        @Html.ValidationMessageFor(model => model.HabAcademicas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    @* listagem dos Cursos disponíveis no IPT  *@
                    <table class="table">
                        <tr>
                            <th>Cursos</th>
                        </tr>
                        <tr>
                            <td>
                                <select class="selectpicker" name="ListaDeCursos" multiple>
                                    <option disabled selected value=""> Selecionar Curso(s) </option>

                                    @foreach (var curso in ViewBag.Cursos)
                                    {
                                        @* se a lista de curso estiver selecionado *@
                                    if (Model.ListaCursos.Contains(curso))
                                    {
                                        <option value="@curso.CursoID" selected> @curso.NomeCurso</option>
                                    }
                                    @* se não, selecionar um curso*@
                                    else
                                    {
                                        <option value="@curso.CursoID"> @curso.NomeCurso</option>
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="col-md-4">
                    @* listagem das Áreas disponíveis no IPT  *@
                    <table class="table">
                        <tr>
                            <th>Áreas de Interesse</th>
                        </tr>
                        <tr>
                            <td>
                                <select class="selectpicker" name="ListaDeAreas" multiple>
                                    <option disabled selected value=""> Selecionar Área(s) </option>

                                    @foreach (var area in ViewBag.Areas)
                                    {
                                        @* se a lista de curso estiver selecionado *@
                                    if (Model.ListaAreas.Contains(area))
                                    {
                                        <option value="@area.AreaID" selected> @area.NomeArea</option>
                                    }
                                    @* se não, selecionar um curso*@
                                    else
                                    {
                                        <option value="@area.AreaID"> @area.NomeArea</option>
                                        }

                                    }
                                </select>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="col-md-4">
                    @* listagem dos Tipos de Cursos disponíveis no IPT  *@
                    <table class="table">
                        <tr>
                            <th>Tipos de Cursos</th>
                        </tr>
                        <tr>
                            <td>
                                <select class="selectpicker" name="ListaDeTipoCurso" multiple>
                                    <option disabled selected value=""> Selecionar Tipo(s) Curso(s) </option>

                                    @foreach (var tipocurso in ViewBag.TipoCurso)
                                    {
                                        if (Model.ListaTipoCurso.Contains(tipocurso))
                                        {
                                            <option value="@tipocurso.TipoID" selected> @tipocurso.Tipo</option>
                                        }
                                        else
                                        {
                                            <option value="@tipocurso.TipoID"> @tipocurso.Tipo</option>
                                        }

                                    }
                                </select>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="form-group">
                </div>
                <div class="form-group">
                </div>
                <div class="form-group">
                </div>
                <div class="form-group">
                </div>
            </div>
        }

        <br /><br /><br /><br />  <br /><br />
        <div class="btn btn-secondary text-danger" style="height:40px">
          @if (User.IsInRole("Gestores"))
            {
                @Html.ActionLink("Listar os Potenciais Alunos", "Index", "PotencialAluno", new { @class = "btn btn-primary" })
            }
            <input type="submit" value="Guardar alteração" class="btn btn-success" />
        </div>
    </div>
</div>