@model InspiringIPT.Models.PotencialAluno

<br />

<div class="row" style="border:inherit;">
    <div class="col-sm-14" style="background-color:antiquewhite;text-align:center; border:double;">
        <h2 class="page-header"><small> Registo de Potencial Aluno <span class="glyphicon glyphicon-user"></span></small></h2>
    </div>
    <div class="col-sm-14" style="background-color:lavender; border:double">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="form-group">
                        <br />
                        @Html.LabelFor(model => model.NomeCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @class = " form-control", @autofocus = "", @placeholder = "Introduzir o seu Nome Completo" } })
                            @Html.ValidationMessageFor(model => model.NomeCompleto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = " form-control", @placeholder = "Introduzir o seu E-mail" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Concelho, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Concelho, new { htmlAttributes = new { @class = " form-control", @placeholder = "Introduzir o seu Concelho" } })
                            @Html.ValidationMessageFor(model => model.Concelho, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = " form-control", @placeholder = "Introduzir  DD/MM/AAAA" } })
                            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Contacto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contacto, new { htmlAttributes = new { @class = "form-control", @maxlength = "9", @placeholder = "Introduzir o seu Contacto" } })
                            @Html.ValidationMessageFor(model => model.Contacto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.RadioButtonFor(model => model.Genero, "M") Masculino <br />
                            @Html.RadioButtonFor(model => model.Genero, "F") Feminino
                            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HabAcademicas, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.RadioButtonFor(model => model.HabAcademicas, "ainda não tenho o 12º ano") ainda não tenho o 12º ano <br />
                            @Html.RadioButtonFor(model => model.HabAcademicas, "12º ano") 12º ano <br />
                            @Html.RadioButtonFor(model => model.HabAcademicas, "Licenciatura") Licenciatura<br />
                            @Html.RadioButtonFor(model => model.HabAcademicas, "Mestrado") Mestrado<br />
                            @Html.RadioButtonFor(model => model.HabAcademicas, "Doutoramento") Doutoramento<br />
                            @Html.RadioButtonFor(model => model.HabAcademicas, "Grau Académico Superior Estrangeiro") Grau Académico Auperior Estrangeiro<br />
                            @Html.ValidationMessageFor(model => model.HabAcademicas, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="col-md-4">
                        @* listagem dos Cursos disponíveis no IPT  *@
                        <table class="table">
                            <tr>
                                <th>Cursos:</th>
                            </tr>
                            <tr>
                                <td>
                                    <select class="selectpicker" name="ListaDeCursos" multiple>
                                        <option disabled selected value=""> Selecionar Curso(s) </option>
                                        @{string selecionado = "";
                                            string cursosEscolhidos = (string)ViewBag.AuxCursos;
                                            foreach (var curso in ViewBag.Cursos)
                                            {
                                                if (cursosEscolhidos.Contains(curso.CursoID+"")) { selecionado = "selected"; }
                                                else { selecionado = ""; }
                                                <option value="@curso.CursoID" @selecionado> @curso.NomeCurso</option>
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <div class="col-md-4">
                        @* listagem das Áreas disponíveis no IPT  *@
                        <table class="table">
                            <tr>
                                <th>Áreas de Interesse:</th>
                            </tr>
                            <tr>
                                <td>
                                    <select class="selectpicker" name="ListaDeAreas" multiple>
                                        <option disabled selected value=""> Selecionar Área(s) </option>
                                        @{ string areasEscolhidas = (string)ViewBag.AuxAreas;
                                            foreach (var area in ViewBag.Areas)
                                            {
                                                if (areasEscolhidas.Contains(area.AreaID+"")) { selecionado = "selected"; }
                                                else { selecionado = ""; }
                                                <option value="@area.AreaID" @selecionado> @area.NomeArea</option>
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <div class="col-md-4">
                        @* listagem dos Tipos de Cursos disponíveis no IPT  *@
                        <table class="table">
                            <tr>
                                <th>Tipos de Cursos:</th>
                            </tr>
                            <tr>
                                <td>
                                    <select class="selectpicker" name="ListaDeTipoCurso" multiple>
                                        <option disabled selected value=""> Selecionar Tipo(s) Curso(s) </option>
                                        @{ string tiposCursosEscolhidos = (string)ViewBag.AuxTiposCurso;
                                            foreach (var tipocurso in ViewBag.TipoCurso)
                                            {
                                                if (tiposCursosEscolhidos.Contains(tipocurso.TipoID+"")) { selecionado = "selected"; }
                                                else { selecionado = ""; }
                                                <option value="@tipocurso.TipoID" @selecionado> @tipocurso.Tipo</option>
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                        </table>
                    </div>


                    @*<br /><br />
                        e se se apresentasse aqui um Captcha?
                        <br /><br />*@

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-10">
                            <br />@*<br /><br /><br /><br /><br /><br /><br /><br />*@
                            <input type="submit" value="Submeter a Pré-Inscrição" class="btn btn-success" style="width:305px;height:50px; font-family:Arial; text-align:center" />
                            <p></p>
                        </div>
                    </div>
                </div>
            </div>

                                            }
    </div>
</div>
